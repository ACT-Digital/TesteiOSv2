//
//  UserProfileInteractorTests.swift
//  BrunoCcySantander
//
//  Created by Bruno Chen on 17/06/20.
//  Copyright (c) 2020 Bruno Chen. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import BrunoCcySantander
import XCTest

class UserProfileInteractorTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: UserProfileInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupUserProfileInteractor()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupUserProfileInteractor()
  {
    sut = UserProfileInteractor()
  }
  
  // MARK: Test doubles
  
  class UserProfilePresentationLogicSpy: UserProfilePresentationLogic
  {
    
    var presentSomethingCalled = false
    
    func presentUserInfo(response: UserProfile.UserInfo.Response) {
        presentSomethingCalled = true
    }
    
    func presentStatementList(response: UserProfile.StatementListInfo.Response) {
        presentSomethingCalled = true
    }
  }
  
  // MARK: Tests
  
  func testGetStatementListInfo()
  {
    // Given
    let spy = UserProfilePresentationLogicSpy()
    sut.presenter = spy
    sut.worker = UserProfieleWorkerSpy()
    let request = UserProfile.StatementListInfo.Request()
    
    // When
    sut.getStatementListInfo(request: request)
    
    // Then
    XCTAssertTrue(spy.presentSomethingCalled, "getStatementListInfo(request:) should ask the presenter to format the result")
  }
}

class UserProfieleWorkerSpy: UserProfileWorkerProtocol {
    func fetchStatementList(completionHandler: @escaping ([StatementList]) -> Void) {
        completionHandler([StatementList(title: "title", desc: "desc", date: "date", value: 1.0)])
    }
}
