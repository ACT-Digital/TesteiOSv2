//
//  UserProfilePresenter.swift
//  BrunoCcySantander
//
//  Created by Bruno Chen on 17/06/20.
//  Copyright (c) 2020 Bruno Chen. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol UserProfilePresentationLogic
{
  func presentUserInfo(response: UserProfile.UserInfo.Response)
  func presentStatementList(response: UserProfile.StatementListInfo.Response)
}

class UserProfilePresenter: UserProfilePresentationLogic
{
  weak var viewController: UserProfileDisplayLogic?
  
  // MARK: Do something
  
  func presentUserInfo(response: UserProfile.UserInfo.Response)
  {
    let userAccount = response.userData.userAccount
    let name = userAccount.name
    let bankAgencyAccount = "\(userAccount.agency) / \(userAccount.bankAccount)"
    let balance = userAccount.balance.toPrice()
    
    let viewModel = UserProfile.UserInfo.ViewModel(name: name, bankAgencyAccount: bankAgencyAccount, balance: balance)
    viewController?.displayUserInfo(viewModel: viewModel)
  }
    
    func presentStatementList(response: UserProfile.StatementListInfo.Response) {
        
        var displayedStatementList: [UserProfile.StatementListInfo.ViewModel.DisplayedStatement] = []
        
        for statementList in response.statementList {
            let title = statementList.title
            let desc = statementList.desc
            let date = statementList.date
            let value = statementList.value.toPrice()
            let displayedStatement = UserProfile.StatementListInfo.ViewModel.DisplayedStatement(title: title, desc: desc, date: date, value: value)
            displayedStatementList.append(displayedStatement)
        }
        
        let viewModel = UserProfile.StatementListInfo.ViewModel(displayedStatement: displayedStatementList)
        
        viewController?.displayStatementListInfo(viewModel: viewModel)
        
    }

}
